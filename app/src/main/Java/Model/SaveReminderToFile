package Model;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.os.Environment;
import android.util.Log;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
//import java.io.OutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;

public class SaveReminderToFile {
    private String fileName;
    //private PrintWriter printWriter;
    private File gFile;
    private File dir;

    public static File getDataDirectory(){
        File root = android.os.Environment.getExternalStorageDirectory();//http://stackoverflow.com/questions/8330276/
//        if (!root.exists()) {
//            root.mkdirs(); // make directory (might not be necessary
//        }
        File dir = new File(root.getAbsolutePath()+"/ReminderApp2");
        if (!dir.exists()){
            dir.mkdirs();//create folders where write files
        }
        return dir;
    }


    public SaveReminderToFile(String fileName) throws FileNotFoundException, UnsupportedEncodingException {
        this.fileName = "reminder"+fileName+".txt";
//        File root = android.os.Environment.getExternalStorageDirectory();//http://stackoverflow.com/questions/8330276/
////        if (!root.exists()) {
////            root.mkdirs(); // make directory (might not be necessary
////        }
//         dir = new File(root.getAbsolutePath()+"/ReminderApp2");
//        if (!dir.exists()){
//            dir.mkdirs();//create folders where write files
//        }
        dir =getDataDirectory();
         gFile = new File(dir,this.fileName);
    }

    public void writeToFile(String[] data, Context context){
        try{
//            OutputStreamWriter outputStreamWriter = new OutputStreamWriter(context.openFileOutput(fileName+".txt",Context.MODE_PRIVATE));
//            outputStreamWriter.write(data);
//            outputStreamWriter.close();
            BufferedWriter oFile = new BufferedWriter(new OutputStreamWriter(
                    new FileOutputStream(gFile.getAbsoluteFile()), "UTF-8"));
            for(String word :data) {
                oFile.write(word);
                oFile.newLine();
            }
            oFile.close();
        }catch(IOException e){
            Log.e("Exception",e.getMessage());
        }
    }

    public void writeToFile(String data){
        try {
            BufferedWriter oFile = new BufferedWriter(new OutputStreamWriter(
                    new FileOutputStream(gFile.getAbsoluteFile()), "UTF-8"));
            oFile.write(data);
            oFile.close();
        } catch (UnsupportedEncodingException e) {
            Log.e("",e.getMessage());
        } catch (FileNotFoundException e) {
            Log.e("",e.getMessage());
        } catch (IOException e) {
            Log.e("",e.getMessage());
        }
    }

    public String readFromFile(Context ctx){
        String ret="";
         final AlertDialog alertDialog = new AlertDialog.Builder(ctx).create();
        alertDialog.setTitle("Warning");
        try{
            FileInputStream inputStream =new FileInputStream(gFile); //stackoverflow.com/questions/5963535
            if ( inputStream != null ) {
                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
                String receiveString = "";
                StringBuilder stringBuilder = new StringBuilder();


                while ( (receiveString = bufferedReader.readLine()) != null ) {
                    stringBuilder.append(receiveString);
                    stringBuilder.append(System.lineSeparator()); //new line for next line
                }

                inputStream.close();
                ret = stringBuilder.toString();
            }
        } catch (FileNotFoundException e) {
            Log.e("login activity", "File not found: " + e.toString());
            //ret=e.toString();
            alertDialog.setMessage(e.toString());
            alertDialog.setButton(AlertDialog.BUTTON_NEUTRAL, "OK",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialogInterface, int i) {
                            alertDialog.dismiss();
                        }
                    }
            );

        } catch (IOException e) {
            //e.printStackTrace();
            Log.e("login activity", "Can not read file: " + e.toString());
            alertDialog.setMessage(e.toString());
            alertDialog.setButton(AlertDialog.BUTTON_NEUTRAL, "OK",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialogInterface, int i) {
                            alertDialog.dismiss();
                        }
                    }
            );
        }
        return ret;
    }
}
